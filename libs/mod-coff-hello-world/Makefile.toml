[config]
skip_core_tasks = true
default_to_workspace = false

[env]
MINGW_X86_PREFIX = "i686-w64-mingw32-"
MINGW_X64_PREFIX = "x86_64-w64-mingw32-"
BOF_NAME = "mod-coff-hello-world"

# Combine the object files into a single object file
[tasks.combine-objs.linux]
script_runner = "@shell"
script = '''
${MINGW_PREFIX}ld -T linker_script.ld --gc-sections -u ${ENTRY_PREFIX}go \
    -i ${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${RUST_TARGET}/release/deps/*.o \
    -o ${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${RUST_TARGET}/release/${CARGO_MAKE_CRATE_NAME}.${BOF_ARCH}.o
'''
dependencies = ["generate-linker-script", "build"]

[tasks.strip-uneeded]
command = "${MINGW_PREFIX}strip"
args = ["--strip-unneeded", "../../target/${RUST_TARGET}/release/${CARGO_MAKE_CRATE_NAME}.${BOF_ARCH}.o"]
dependencies = ["combine-objs"]

[tasks.generate-linker-script]
script = """
${MINGW_PREFIX}ld -i --verbose | \
    sed -n '/^======/, /^======/p' | \
    grep -v '=======' | \
    sed 's/\\(*(.rdata)\\)/__rdata_start__ = .;\\n\\1\\n*(.rdata$.refptr.*)/' | \
    sed 's/\\(*(.text)\\)/__text_start__ = .;\\n\\1/' | \
    sed 's/\\(*(.data)\\)/__data_start__ = .;\\n\\1/' > linker_script.ld
"""

[tasks.build]
script_runner = "@shell"
script = '''
echo "$ rustup +nightly component add rust-src --target ${RUST_TARGET}"
rustup +nightly component add rust-src --target ${RUST_TARGET}

echo "$ cargo +nightly build -p ${CARGO_MAKE_CRATE_NAME} --target ${RUST_TARGET} --release -Z build-std=core,panic_abort,alloc -Z build-std-features=panic_immediate_abort,compiler-builtins-mem"
cargo +nightly build \
    -p ${CARGO_MAKE_CRATE_NAME} \
    --target ${RUST_TARGET} \
    --release \
    -Z build-std=core,panic_abort,alloc \
    -Z build-std-features=panic_immediate_abort,compiler-builtins-mem
'''
env = { "RUSTFLAGS" = "-C panic=abort --emit=obj" }

[tasks.clean-target]
command = "cargo"
args = ["clean"]

[tasks.clean-bof]
script = "rm -rf ${CARGO_MAKE_CRATE_NAME}.*.o"

[tasks.clean-misc]
command = "rm"
args = ["-rf", "linker_script.ld"]

[tasks.clean]
dependencies = ["clean-target", "clean-bof", "clean-misc"]

[tasks.all]
dependencies = ["strip-uneeded"]

[tasks.cleanall]
dependencies = ["clean", "default"]

[tasks.default]
dependencies = ["build-x86", "build-x64"]

[tasks.build-x86]
env = { "MINGW_PREFIX" = "${MINGW_X86_PREFIX}", "RUST_TARGET" = "i686-pc-windows-gnu", "BOF_ARCH" = "x86", "ENTRY_PREFIX" = "_" }
run_task = "all"

[tasks.build-x64]
env = { "MINGW_PREFIX" = "${MINGW_X64_PREFIX}", "RUST_TARGET" = "x86_64-pc-windows-gnu", "BOF_ARCH" = "x64", "ENTRY_PREFIX" = "" }
run_task = "all"
