[config]
skip_core_tasks = true
default_to_workspace = false

[env]
TARGET = "x86_64-pc-windows-gnu"

[tasks.default]
clear = true
alias = "strip"

[tasks.build]
clear = true
dependencies = ["build-x64", "build-x86"]

[tasks.build-x86.linux]
clear = true
env = { "TARGET" = "i686-pc-windows-gnu" }
run_task = "build-common"

[tasks.build-x86.windows]
clear = true
env = { "TARGET" = "i686-pc-windows-msvc" }
run_task = "build-common"

[tasks.build-x64.linux]
clear = true
env = { "TARGET" = "x86_64-pc-windows-gnu" }
run_task = "build-common"

[tasks.build-x64.windows]
clear = true
env = { "TARGET" = "x86_64-pc-windows-msvc" }
run_task = "build-common"

[tasks.build-common.linux]
clear = true
script_runner = "@shell"
script = '''
echo "$ cargo build --release --target ${TARGET}"
cargo build --release --target ${TARGET}
'''
env = { "RUSTFLAGS" = "-C panic=abort -C link-arg=-Wl,--gc-sections -C link-arg=-Wl,--strip-all" }

[tasks.build-common.windows]
clear = true
script_runner = "@shell"
script = '''
echo "$ cargo build --release --target ${TARGET}"
cargo build --release --target ${TARGET}
'''
env = { "RUSTFLAGS" = "-C panic=abort -C link-arg=/SUBSYSTEM:console -C link-arg=/MERGE:.rdata=.text -C link-arg=/MERGE:.data=.text -C link-arg=/OPT:REF,ICF" }

[tasks.strip.linux]
clear = true
script_runner = "@shell"
script = "strip -s ${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/x86_64-pc-windows-gnu/release/kageshirei-agent.exe"
dependencies = ["build"]

[tasks.strip.windows]
clear = true
run_task = "build"

[tasks.build-dev]
description = "Build in development mode with std feature"
clear = true
script_runner = "@shell"
script = '''
echo "$ cargo build --features std --target x86_64-pc-windows-msvc"
cargo build --features std --target x86_64-pc-windows-msvc
'''

[tasks.run-dev]
description = "Run in development mode with std feature"
command = "cargo"
args = ["run", "--features", "std"]